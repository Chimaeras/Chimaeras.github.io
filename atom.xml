<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://chimaeras.ltd</id>
    <title>Joker&apos;s Blog</title>
    <updated>2021-09-15T10:24:41.333Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://chimaeras.ltd"/>
    <link rel="self" href="https://chimaeras.ltd/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://chimaeras.ltd/images/avatar.png</logo>
    <icon>https://chimaeras.ltd/favicon.ico</icon>
    <rights>All rights reserved 2021, Joker&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[最小的前k个数]]></title>
        <id>https://chimaeras.ltd/post/zui-xiao-de-qian-k-ge-shu/</id>
        <link href="https://chimaeras.ltd/post/zui-xiao-de-qian-k-ge-shu/">
        </link>
        <updated>2021-09-15T10:18:25.000Z</updated>
        <summary type="html"><![CDATA[<p>输入整数数组 <code>arr</code> ，找出其中最小的 <code>k</code> 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。</p>
]]></summary>
        <content type="html"><![CDATA[<p>输入整数数组 <code>arr</code> ，找出其中最小的 <code>k</code> 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[矩阵中的元素]]></title>
        <id>https://chimaeras.ltd/post/ju-zhen-zhong-de-yuan-su/</id>
        <link href="https://chimaeras.ltd/post/ju-zhen-zhong-de-yuan-su/">
        </link>
        <updated>2021-09-15T07:54:47.000Z</updated>
        <summary type="html"><![CDATA[<p>给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。</p>
<p>单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。</p>
]]></summary>
        <content type="html"><![CDATA[<p>给定一个 m x n 二维字符网格 board 和一个字符串单词 word 。如果 word 存在于网格中，返回 true ；否则，返回 false 。</p>
<p>单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[字符串的排列]]></title>
        <id>https://chimaeras.ltd/post/zi-fu-chuan-de-pai-lie/</id>
        <link href="https://chimaeras.ltd/post/zi-fu-chuan-de-pai-lie/">
        </link>
        <updated>2021-09-15T07:12:06.000Z</updated>
        <summary type="html"><![CDATA[<p>输入一个字符串，打印出该字符串中字符的所有排列。</p>
<p>你可以以任意顺序返回这个字符串数组，但里面不能有重复元素。</p>
]]></summary>
        <content type="html"><![CDATA[<p>输入一个字符串，打印出该字符串中字符的所有排列。</p>
<p>你可以以任意顺序返回这个字符串数组，但里面不能有重复元素。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[把字符串转换成整数]]></title>
        <id>https://chimaeras.ltd/post/ba-zi-fu-chuan-zhuan-huan-cheng-zheng-shu/</id>
        <link href="https://chimaeras.ltd/post/ba-zi-fu-chuan-zhuan-huan-cheng-zheng-shu/">
        </link>
        <updated>2021-09-15T06:45:07.000Z</updated>
        <summary type="html"><![CDATA[<p>写一个函数 StrToInt，实现把字符串转换成整数这个功能。不能使用 atoi 或者其他类似的库函数。</p>
]]></summary>
        <content type="html"><![CDATA[<p>写一个函数 StrToInt，实现把字符串转换成整数这个功能。不能使用 atoi 或者其他类似的库函数。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[序列化二叉树]]></title>
        <id>https://chimaeras.ltd/post/xu-lie-hua-er-cha-shu/</id>
        <link href="https://chimaeras.ltd/post/xu-lie-hua-er-cha-shu/">
        </link>
        <updated>2021-09-15T04:21:39.000Z</updated>
        <summary type="html"><![CDATA[<p>请实现两个函数，分别用来序列化和反序列化二叉树。</p>
<p>你需要设计一个算法来实现二叉树的序列化与反序列化。这里不限定你的序列 / 反序列化算法执行逻辑，你只需要保证一个二叉树可以被序列化为一个字符串并且将这个字符串反序列化为原始的树结构。</p>
]]></summary>
        <content type="html"><![CDATA[<p>请实现两个函数，分别用来序列化和反序列化二叉树。</p>
<p>你需要设计一个算法来实现二叉树的序列化与反序列化。这里不限定你的序列 / 反序列化算法执行逻辑，你只需要保证一个二叉树可以被序列化为一个字符串并且将这个字符串反序列化为原始的树结构。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[LRU缓存]]></title>
        <id>https://chimaeras.ltd/post/lru-huan-cun/</id>
        <link href="https://chimaeras.ltd/post/lru-huan-cun/">
        </link>
        <updated>2021-09-14T09:16:34.000Z</updated>
        <summary type="html"><![CDATA[<p>设计和构建一个“最近最少使用”缓存，该缓存会删除最近最少使用的项目。缓存应该从键映射到值(允许你插入和检索特定键对应的值)，并在初始化时指定最大容量。当缓存被填满时，它应该删除最近最少使用的项目。</p>
]]></summary>
        <content type="html"><![CDATA[<p>设计和构建一个“最近最少使用”缓存，该缓存会删除最近最少使用的项目。缓存应该从键映射到值(允许你插入和检索特定键对应的值)，并在初始化时指定最大容量。当缓存被填满时，它应该删除最近最少使用的项目。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[二叉搜索树的第k大节点]]></title>
        <id>https://chimaeras.ltd/post/er-cha-sou-suo-shu-de-di-k-da-jie-dian/</id>
        <link href="https://chimaeras.ltd/post/er-cha-sou-suo-shu-de-di-k-da-jie-dian/">
        </link>
        <updated>2021-09-14T07:05:42.000Z</updated>
        <summary type="html"><![CDATA[<p>给定一棵二叉搜索树，请找出其中第k大的节点。</p>
]]></summary>
        <content type="html"><![CDATA[<p>给定一棵二叉搜索树，请找出其中第k大的节点。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[二叉搜索树中两个节点之和]]></title>
        <id>https://chimaeras.ltd/post/er-cha-sou-suo-shu-zhong-liang-ge-jie-dian-zhi-he/</id>
        <link href="https://chimaeras.ltd/post/er-cha-sou-suo-shu-zhong-liang-ge-jie-dian-zhi-he/">
        </link>
        <updated>2021-09-14T06:36:04.000Z</updated>
        <summary type="html"><![CDATA[<p>给定一个二叉搜索树的 <strong>根节点</strong> <code>root</code> 和一个整数 <code>k</code> , 请判断该二叉搜索树中是否存在两个节点它们的值之和等于 <code>k</code> 。假设二叉搜索树中节点的值均唯一。</p>
<hr>
]]></summary>
        <content type="html"><![CDATA[<p>给定一个二叉搜索树的 <strong>根节点</strong> <code>root</code> 和一个整数 <code>k</code> , 请判断该二叉搜索树中是否存在两个节点它们的值之和等于 <code>k</code> 。假设二叉搜索树中节点的值均唯一。</p>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[二叉树中和为某一值的路径]]></title>
        <id>https://chimaeras.ltd/post/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing/</id>
        <link href="https://chimaeras.ltd/post/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing/">
        </link>
        <updated>2021-09-14T05:56:12.000Z</updated>
        <summary type="html"><![CDATA[<p>输入一棵二叉树和一个整数，打印出二叉树中节点值的和为输入整数的所有路径。从树的根节点开始往下一直到叶节点所经过的节点形成一条路径。</p>
<hr>
]]></summary>
        <content type="html"><![CDATA[<p>输入一棵二叉树和一个整数，打印出二叉树中节点值的和为输入整数的所有路径。从树的根节点开始往下一直到叶节点所经过的节点形成一条路径。</p>
<hr>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[回旋镖的数量]]></title>
        <id>https://chimaeras.ltd/post/hui-xuan-biao-de-shu-liang/</id>
        <link href="https://chimaeras.ltd/post/hui-xuan-biao-de-shu-liang/">
        </link>
        <updated>2021-09-13T11:06:29.000Z</updated>
        <summary type="html"><![CDATA[<p>给定平面上 n 对 互不相同 的点 points ，其中 points[i] = [xi, yi] 。回旋镖 是由点 (i, j, k) 表示的元组 ，其中 i 和 j 之间的距离和 i 和 k 之间的距离相等（需要考虑元组的顺序）。</p>
<p>返回平面上所有回旋镖的数量。</p>
]]></summary>
        <content type="html"><![CDATA[<p>给定平面上 n 对 互不相同 的点 points ，其中 points[i] = [xi, yi] 。回旋镖 是由点 (i, j, k) 表示的元组 ，其中 i 和 j 之间的距离和 i 和 k 之间的距离相等（需要考虑元组的顺序）。</p>
<p>返回平面上所有回旋镖的数量。</p>
]]></content>
    </entry>
</feed>